/* Generated By:JavaCC: Do not edit this line. SyntaxTreeBuilderTreeConstants.java Version 5.0 */
package org.openrdf.query.parser.sparql.ast;

public interface SyntaxTreeBuilderTreeConstants
{
  public int JJTQUERYCONTAINER = 0;
  public int JJTVOID = 1;
  public int JJTBASEDECL = 2;
  public int JJTPREFIXDECL = 3;
  public int JJTSELECTQUERY = 4;
  public int JJTSELECT = 5;
  public int JJTPROJECTIONELEM = 6;
  public int JJTCONSTRUCTQUERY = 7;
  public int JJTCONSTRUCT = 8;
  public int JJTDESCRIBEQUERY = 9;
  public int JJTDESCRIBE = 10;
  public int JJTASKQUERY = 11;
  public int JJTDATASETCLAUSE = 12;
  public int JJTWHERECLAUSE = 13;
  public int JJTGROUPCLAUSE = 14;
  public int JJTORDERCLAUSE = 15;
  public int JJTGROUPCONDITION = 16;
  public int JJTHAVINGCLAUSE = 17;
  public int JJTORDERCONDITION = 18;
  public int JJTLIMIT = 19;
  public int JJTOFFSET = 20;
  public int JJTGRAPHPATTERNGROUP = 21;
  public int JJTBASICGRAPHPATTERN = 22;
  public int JJTOPTIONALGRAPHPATTERN = 23;
  public int JJTGRAPHGRAPHPATTERN = 24;
  public int JJTUNIONGRAPHPATTERN = 25;
  public int JJTMINUSGRAPHPATTERN = 26;
  public int JJTCONSTRAINT = 27;
  public int JJTFUNCTIONCALL = 28;
  public int JJTTRIPLESSAMESUBJECT = 29;
  public int JJTPROPERTYLIST = 30;
  public int JJTOBJECTLIST = 31;
  public int JJTTRIPLESSAMESUBJECTPATH = 32;
  public int JJTPROPERTYLISTPATH = 33;
  public int JJTPATHALTERNATIVE = 34;
  public int JJTPATHSEQUENCE = 35;
  public int JJTPATHELT = 36;
  public int JJTIRI = 37;
  public int JJTPATHONEINPROPERTYSET = 38;
  public int JJTPATHMOD = 39;
  public int JJTBLANKNODEPROPERTYLIST = 40;
  public int JJTCOLLECTION = 41;
  public int JJTVAR = 42;
  public int JJTOR = 43;
  public int JJTAND = 44;
  public int JJTCOMPARE = 45;
  public int JJTMATH = 46;
  public int JJTNOT = 47;
  public int JJTNUMERICLITERAL = 48;
  public int JJTCOUNT = 49;
  public int JJTSUM = 50;
  public int JJTMIN = 51;
  public int JJTMAX = 52;
  public int JJTAVG = 53;
  public int JJTSAMPLE = 54;
  public int JJTGROUPCONCAT = 55;
  public int JJTSUBSTR = 56;
  public int JJTSTRLEN = 57;
  public int JJTUPPERCASE = 58;
  public int JJTLOWERCASE = 59;
  public int JJTSTRSTARTS = 60;
  public int JJTSTRENDS = 61;
  public int JJTCONCAT = 62;
  public int JJTCONTAINS = 63;
  public int JJTENCODEFORURI = 64;
  public int JJTIF = 65;
  public int JJTIN = 66;
  public int JJTNOTIN = 67;
  public int JJTCOALESCE = 68;
  public int JJTSTR = 69;
  public int JJTLANG = 70;
  public int JJTLANGMATCHES = 71;
  public int JJTDATATYPE = 72;
  public int JJTBOUND = 73;
  public int JJTSAMETERM = 74;
  public int JJTISIRI = 75;
  public int JJTISBLANK = 76;
  public int JJTISLITERAL = 77;
  public int JJTISNUMERIC = 78;
  public int JJTBNODEFUNC = 79;
  public int JJTIRIFUNC = 80;
  public int JJTSTRDT = 81;
  public int JJTSTRLANG = 82;
  public int JJTBIND = 83;
  public int JJTREGEXEXPRESSION = 84;
  public int JJTEXISTSFUNC = 85;
  public int JJTNOTEXISTSFUNC = 86;
  public int JJTRDFLITERAL = 87;
  public int JJTTRUE = 88;
  public int JJTFALSE = 89;
  public int JJTSTRING = 90;
  public int JJTQNAME = 91;
  public int JJTBLANKNODE = 92;


  public String[] jjtNodeName = {
    "QueryContainer",
    "void",
    "BaseDecl",
    "PrefixDecl",
    "SelectQuery",
    "Select",
    "ProjectionElem",
    "ConstructQuery",
    "Construct",
    "DescribeQuery",
    "Describe",
    "AskQuery",
    "DatasetClause",
    "WhereClause",
    "GroupClause",
    "OrderClause",
    "GroupCondition",
    "HavingClause",
    "OrderCondition",
    "Limit",
    "Offset",
    "GraphPatternGroup",
    "BasicGraphPattern",
    "OptionalGraphPattern",
    "GraphGraphPattern",
    "UnionGraphPattern",
    "MinusGraphPattern",
    "Constraint",
    "FunctionCall",
    "TriplesSameSubject",
    "PropertyList",
    "ObjectList",
    "TriplesSameSubjectPath",
    "PropertyListPath",
    "PathAlternative",
    "PathSequence",
    "PathElt",
    "IRI",
    "PathOneInPropertySet",
    "PathMod",
    "BlankNodePropertyList",
    "Collection",
    "Var",
    "Or",
    "And",
    "Compare",
    "Math",
    "Not",
    "NumericLiteral",
    "Count",
    "Sum",
    "Min",
    "Max",
    "Avg",
    "Sample",
    "GroupConcat",
    "Substr",
    "StrLen",
    "UpperCase",
    "LowerCase",
    "StrStarts",
    "StrEnds",
    "Concat",
    "Contains",
    "EncodeForURI",
    "If",
    "In",
    "NotIn",
    "Coalesce",
    "Str",
    "Lang",
    "LangMatches",
    "Datatype",
    "Bound",
    "SameTerm",
    "IsIRI",
    "IsBlank",
    "IsLiteral",
    "IsNumeric",
    "BNodeFunc",
    "IRIFunc",
    "StrDt",
    "StrLang",
    "Bind",
    "RegexExpression",
    "ExistsFunc",
    "NotExistsFunc",
    "RDFLiteral",
    "True",
    "False",
    "String",
    "QName",
    "BlankNode",
  };
}
/* JavaCC - OriginalChecksum=d517fca241e4f2ac3539e9ee06dec129 (do not edit this line) */
